var e=Object.defineProperty,t=(t,s,n)=>(((t,s,n)=>{s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[s]=n;})(t,"symbol"!=typeof s?s+"":s,n),n);function s(){const e=new Uint8Array(16);return crypto.getRandomValues(e),Array.from(e,(e=>e.toString(16).padStart(2,"0"))).join("")}var n=(e=>(e.RPC_REQUEST="rpc-request",e.RPC_RESPONSE="rpc-response",e.RPC_CALLBACK_CALL="rpc-callback-call",e.RPC_CONNECT_REQUEST="rpc-connect-request",e.RPC_CONNECT_RESPONSE="rpc-connect-response",e))(n||{});function a(e){return !0===e?._transframe}var i=class{constructor(e,i){this._interface=e,t(this,"_options"),t(this,"_api"),t(this,"_requestCallbacks",new Map),t(this,"_rpcCallbacks",new Map),t(this,"_availableMethods",new Set),t(this,"_isConnected",!1),t(this,"_isConnecting",!1),t(this,"_apiCallQueue",[]),t(this,"_buildApi",(()=>new Proxy({},{get:(e,t,s)=>["Symbol(Symbol.toPrimitive)","then"].includes(String(t))?Reflect.get(e,t,s):(...e)=>this.call(t,...e)}))),t(this,"connect",(async()=>{if(this._isConnecting||this._isConnected)return;this._interface.connect();const e=function({namespace:e}){return {_transframe:!0,type:n.RPC_CONNECT_REQUEST,namespace:e}}({namespace:this._options?.namespace});this._isConnecting=!0;const t=await new Promise(((t,s)=>{this._requestCallbacks.set("connect",[t,s]);let n=0;const a=()=>{this._interface.sendMessage(e),n++;};a();const i=setInterval((()=>{this._isConnected?clearInterval(i):n<60?a():(clearInterval(i),this._requestCallbacks.delete("connect"),this._isConnected=!1,this._isConnecting=!1,this._apiCallQueue.forEach((([,e])=>e(new Error(`Failed to call api method: could not connect to provider ${this._options?.namespace??""}`)))),s(new Error(`Could not connect to provider ${this._options?.namespace??""}`)));}),50);}));this._availableMethods.clear(),t.forEach((e=>this._availableMethods.add(e))),this._isConnected=!0,this._isConnecting=!1,this._processApiCallQueue();})),t(this,"_messageHandler",(e=>{var t;if(a(e)&&e.namespace===this._options?.namespace)if(a(t=e)&&t.type===n.RPC_RESPONSE){const[t,s]=this._requestCallbacks.get(e.requestId)??[];if(!t||!s)return;e.error?s(e.result):t(e.result),this._requestCallbacks.delete(e.requestId);}else if(function(e){return a(e)&&e.type===n.RPC_CALLBACK_CALL}(e)){const t=this._rpcCallbacks.get(e.callbackId);if(!t)return;t(...e.payload);}else if(function(e){return a(e)&&e.type===n.RPC_CONNECT_RESPONSE}(e)){const[t,s]=this._requestCallbacks.get("connect")??[];if(!t||!s)return;t(e.methods),this._requestCallbacks.delete("connect");}})),t(this,"call",(async(e,...t)=>{if(!this._isConnected&&!this._isConnecting)throw new Error("Cannot call any api methods: Not connected to provider");this._isConnecting&&await new Promise(((e,t)=>{this._apiCallQueue.push([e,t]);}));const a=String(e);if(!this.hasMethod(a))throw new Error(`Method ${a} is not available`);const i=function({requestId:e,method:t,payload:a,namespace:i}){return {_transframe:!0,type:n.RPC_REQUEST,requestId:e??s(),method:t,payload:a,namespace:i}}({method:a,payload:t.map((e=>{if("function"==typeof e){const t=s();return this._rpcCallbacks.set(t,e),function(e){return {_transframeCallback:!0,callbackId:e}}(t)}return e})),namespace:this._options?.namespace});this._interface.sendMessage(i);return await Promise.race([new Promise(((e,t)=>{this._requestCallbacks.set(i.requestId,[e,t]);})),new Promise(((e,t)=>{setTimeout((()=>{t(new Error("RPC request timed out. Check that you can connect to the provider and that the method exists."));}),this._options?.apiCallTimeout??3e3);}))])})),this._options=i,this._api=this._buildApi(),this._interface.onMessage(this._messageHandler),!1!==this._options?.connectImmediately&&this.connect();}_processApiCallQueue(){this._apiCallQueue.forEach((([e])=>e())),this._apiCallQueue=[];}get api(){return this._api}get isConnected(){return this._isConnected&&this._interface.isConnected}hasMethod(e){return this._availableMethods.has(e)}},r=class{constructor(e,i){this._interface=e,t(this,"_options"),t(this,"registerFrame",((e,t)=>(t??(t=s()),this._interface.registerFrame(e,t),t))),t(this,"listen",(()=>{this._interface.listen();})),t(this,"close",(()=>{this._interface.close();})),t(this,"_messageHandler",(async(e,t,s)=>{var i;if(a(e)&&(e.namespace===this._options.namespace&&(!this._options.strictMode||null!=s.fromId)))if(a(i=e)&&i.type===n.RPC_REQUEST){const a=e.payload.map((e=>{if(function(e){return !0===e?._transframeCallback}(e)){const s=e.callbackId,a=(...e)=>{const a=function({callbackId:e,payload:t,namespace:s}){return {_transframe:!0,type:n.RPC_CALLBACK_CALL,callbackId:e,payload:t,namespace:s}}({callbackId:s,payload:e,namespace:this._options.namespace});t(a);};return a}return e})),i=this._options.api[e.method];if(!i)return;let r,o=!1;try{r=await i(s,...a);}catch(e){o=!0,r=e;}const c=function({requestId:e,result:t,error:s=!1,namespace:a}){return {_transframe:!0,type:n.RPC_RESPONSE,requestId:e,result:t,error:s,namespace:a}}({requestId:e.requestId,result:r,error:o,namespace:this._options.namespace});t(c);}else if(function(e){return a(e)&&e.type===n.RPC_CONNECT_REQUEST}(e)){const s=function({namespace:e,methods:t}){return {_transframe:!0,type:n.RPC_CONNECT_RESPONSE,namespace:e,methods:t}}({methods:Object.keys(this._options.api),namespace:e.namespace});t(s);}})),this._options=i,this._interface.onMessage(this._messageHandler),(this._options.listenImmediately??1)&&this.listen();}get isListening(){return this._interface.isListening}get api(){return this._options.api}};

export { i, r, t };

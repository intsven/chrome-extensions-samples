import '../../../chunks/browser-polyfill-f636ce7e.js';
import { o as o$2 } from '../../../chunks/index-7b8f310d.js';
import { o as o$1 } from '../../../chunks/create-58df95e7.js';
import { o as o$3, r } from '../../../chunks/create-5399fd46.js';
import { n } from '../../../chunks/util-dbc6d9af.js';
import '../../../chunks/transframe-provider-e657167f.js';

const o=o$1({namespace:"truffle-background-privileged-api-v1",connectImmediately:!1});o.connect().catch((e=>{console.warn("failed to connect to transframe",e);}));const s=o.api;async function i(e,t,r,{throwIfErrors:a,headers:n}={}){null!=n||(n=new Headers),n.append("Content-Type","application/json");const o=await fetch(e,{method:"POST",headers:n,body:JSON.stringify({query:t,variables:r})}),s=await o.json();if(a&&(null==s?void 0:s.errors))throw new Error(`graphql error ${s.errors}`);return s.data}async function c(){let t=await o$2.auth.get("savedAnonAccessToken");return t||(t=await async function(){var e;const t=await i("https://mycelium.truffle.vip/graphql","\n    mutation UserAnonCreate {\n      userLoginAnon {\n        accessToken\n      }\n    }\n  ",{});return null===(e=null==t?void 0:t.userLoginAnon)||void 0===e?void 0:e.accessToken}(),await o$2.auth.set("savedAnonAccessToken",t)),t}function u(e){const[,t]=e.split(".");return JSON.parse(atob(t))}async function l(){let t=await o$2.auth.get("accessToken");return t||(t=await c()),t}async function d(e){return (await async function(e,t,{authMethod:r,throwIfErrors:a}={authMethod:p.TRUFFLE_API_KEY}){const n="https://mycelium.truffle.vip/graphql",o=new Headers;if(r===p.USER_GLOBAL_ACCESS_TOKEN){const e=await l();o.append("x-access-token",e);}else r===p.TRUFFLE_API_KEY&&o.append("Authorization","Bearer pk_U1x92ZrrdQoflf2JycecdmnilAGRAkmUNBpxPnVPDdeUKcsH");return i(n,e,t,{headers:o,throwIfErrors:a})}("\n      query ExtensionFetchPackageToken($packageInstallId: ID!) {\n        packageInstallUserAccessToken(input: {\n            packageInstallId: $packageInstallId\n        })\n      }\n    ",{packageInstallId:e},{authMethod:p.USER_GLOBAL_ACCESS_TOKEN})).packageInstallUserAccessToken}var p;!function(e){e.USER_GLOBAL_ACCESS_TOKEN="USER_GLOBAL_ACCESS_TOKEN",e.TRUFFLE_API_KEY="TRUFFLE_API_KEY",e.NONE="NONE";}(p||(p={}));class g{constructor(){this._cachedSurrogatePromises=new Map;}async getSurrogateProviderWindow(e){if("parent"===e.type||!e.url)return {providerWindow:window.parent,cleanup:()=>{}};await s.removeHeaders({headers:["x-frame-options","content-security-policy"],ttlMs:5e3});const t=document.createElement("iframe");t.src=e.url,t.style.display="none";const r=new Promise((e=>{t.addEventListener("load",e);}));document.body.appendChild(t),await r;const a=t.contentWindow;if(!a)throw new Error("iframe window not found");return {providerWindow:a,cleanup:()=>{document.body.removeChild(t);}}}getSurrogate(e){const t=`${e.type}:${e.url||""}`,a=this._cachedSurrogatePromises.get(t);if(a)return a;const n=this.getSurrogateProviderWindow(e).then((({providerWindow:e,cleanup:t})=>{const a=r({providerWindow:e,namespace:this.transframeNamespace,connectImmediately:!1});a.connect().catch((e=>{console.log("error connecting to iframe",e);}));const n=r({providerWindow:e,namespace:"truffle-injected-privileged-api-v2",connectImmediately:!1});return n.connect().catch((e=>{console.log("error connecting to iframe",e);})),{transframeApi:a.api,allTransframeApi:n.api,providerWindow:e,cleanup:t}}));return this._cachedSurrogatePromises.set(t,n),n}async addFetchListener(e,t){const{urlRegexString:r,surrogate:a}=e,{allTransframeApi:n}=await this.getSurrogate(a);return n.addFetchListener({urlRegexString:r},t)}async removeFetchListener(e){const{listenerId:t,surrogate:r}=e,{allTransframeApi:a}=await this.getSurrogate(r);return a.removeFetchListener({listenerId:t})}async prepareSurrogate(e){await this.getSurrogate(e);}async cleanupSurrogate(e){if("parent"===e.type||!e.url)throw new Error("Unable to cleanup parent surrogate");const t=`${e.type}:${e.url||""}`,r=this._cachedSurrogatePromises.get(t);if(!r)return;const{cleanup:a}=await r;a(),this._cachedSurrogatePromises.delete(t);}}const h=new class extends g{constructor(){super(...arguments),this.transframeNamespace="truffle-youtube-chat-injected-privileged-api-v1";}async fetch({baseUrl:e="https://www.youtube.com",endpoint:t,surrogate:r={type:"parent"},fetchOptions:a={},body:n={}}){var o,i,c,u;const{transframeApi:l}=await this.getSurrogate(r),d=await l.getYtcfgData(),p=await s.getCookies(e),g=p.map((({name:e,value:t})=>`${e}=${t}`)).join(";");let h=null===(o=p.find((({name:e})=>"SAPISID"===e)))||void 0===o?void 0:o.value;h||(h=null===(i=p.find((({name:e})=>"__Secure-3PAPISID"===e)))||void 0===i?void 0:i.value);const w=null===(c=p.find((({name:e})=>"CONSISTENCY"===e)))||void 0===c?void 0:c.value,{INNERTUBE_CONTEXT:f,INNERTUBE_API_KEY:y,SESSION_INDEX:m,DELEGATED_SESSION_ID:S}=d,b=Math.floor(Date.now()/1e3),v=e,E=await async function(e){const t=await crypto.subtle.digest("SHA-1",(new TextEncoder).encode(e));return Array.from(new Uint8Array(t)).map((e=>e.toString(16).padStart(2,"0"))).join("")}(`${b} ${h} ${v}`);return (null===(u=f.request.consistencyTokenJars)||void 0===u?void 0:u[0])&&(f.request.consistencyTokenJars[0].encryptedTokenJarContents=w,f.request.consistencyTokenJars[0].expirationSeconds=600),s.fetchWithRulesApplied(`${e}${t}?key=${y}`,Object.assign({method:"POST",headers:Object.assign({"content-type":"application/json",cookie:g,authorization:`SAPISIDHASH ${b}_${E}`,"x-goog-authuser":m,"x-goog-pageid":S,"x-origin":v},a.headers||{}),body:JSON.stringify(Object.assign({context:f},n||{}))},a),{headersToRemove:["origin"]})}async webComponentMethod({surrogate:e,querySelector:t,method:r,args:a}){const{transframeApi:n}=await this.getSurrogate(e);return n.webComponentMethod({querySelector:t,method:r,args:a})}async toggleNativeChat({state:e}){const{transframeApi:t}=await this.getSurrogate({type:"parent"});return t.toggleNativeChat({state:e})}};const w=new class extends g{constructor(){super(...arguments),this.transframeNamespace="truffle-twitch-injected-privileged-api-v1";}async fetch({baseUrl:t="https://gql.twitch.tv",endpoint:r="/gql",surrogate:a={type:"parent"},fetchOptions:n={},body:o={},attempt:i=0}){let c=!1,u=await o$2.twitch.get("headers");if(Object.entries(u).length||(await this.getSurrogate(a),c=!0,u=await o$2.twitch.get("headers")),!Object.entries(u).length)throw new Error("Twitch headers not found");let l=await s.fetchWithRulesApplied(`${t}${r}`,Object.assign({method:"POST",headers:Object.assign(Object.assign({referrer:"https://twitch.tv/",referrerPolicy:"strict-origin-when-cross-origin",method:"POST"},u),n.headers||{}),body:JSON.stringify(o)},n),{headersToRemove:["origin"]});return l.startsWith('{"error"')&&!c&&i<1&&(await this.getSurrogate(a),c=!0,l=await this.fetch({baseUrl:t,endpoint:r,surrogate:a,fetchOptions:n,body:o,attempt:i+1})),c&&await this.cleanupSurrogate(a),l}};o$3({api:{fetchWithRulesApplied:async(e,t,r,{headersToRemove:a}={})=>s.fetchWithRulesApplied(t,r,{headersToRemove:a}),removeHeaders:async(e,{headers:t,ttlMs:r})=>s.removeHeaders({headers:t,ttlMs:r}),surrogateAddFetchListener:async(e,{urlRegexString:t,surrogate:r},a)=>{let n;if(t.includes("youtube."))n=h;else {if(!t.includes("twitch."))throw new Error(`Unsupported urlRegexString: ${t}`);n=w;}return n.addFetchListener({urlRegexString:t,surrogate:r},a)},surrogateRemoveFetchListener:async(e,{urlRegexString:t,listenerId:r,surrogate:a})=>{let n;if(t.includes("youtube."))n=h;else {if(!t.includes("twitch."))throw new Error(`Unsupported urlRegexString: ${t}`);n=w;}return n.removeFetchListener({urlRegexString:t,listenerId:r,surrogate:a})},fetch:async(e,{baseUrl:t,endpoint:r,surrogate:a,fetchOptions:n={},body:o={}})=>{let s;if(t.includes("youtube."))s=h;else {if(!t.includes("twitch."))throw new Error(`Unsupported baseUrl: ${t}`);s=w;}return s.fetch({baseUrl:t,endpoint:r,surrogate:a,fetchOptions:n,body:o})},prepareSurrogate:async(e,{surrogate:t})=>{if("parent"===t.type||!t.url)throw new Error("Unable to prepare parent surrogate");let r;if(t.url.includes("youtube.com"))r=h;else {if(!t.url.includes("twitch"))throw new Error(`Unsupported surrogate url: ${t.url}`);r=w;}return r.prepareSurrogate(t)},cleanupSurrogate:async(e,{surrogate:t})=>{if("parent"===t.type||!t.url)throw new Error("Unable to cleanup parent surrogate");let r;if(t.url.includes("youtube.com"))r=h;else {if(!t.url.includes("twitch"))throw new Error(`Unsupported surrogate url: ${t.url}`);r=w;}return r.cleanupSurrogate(t)},youtubeWebComponentMethod:async(e,{surrogate:t,querySelector:r,method:a,args:n})=>h.webComponentMethod({surrogate:t,querySelector:r,method:a,args:n}),youtubeToggleNativeChat:async(e,{state:t})=>h.toggleNativeChat({state:t}),youtubeFetch:async(e,{baseUrl:t,endpoint:r,surrogate:a,fetchOptions:n={},body:o={},partialBody:s})=>(o=s||o,h.fetch({baseUrl:t,endpoint:r,surrogate:a,fetchOptions:n,body:o})),youtubePrepareSurrogate:async(e,{surrogate:t})=>h.prepareSurrogate(t),youtubeCleanupSurrogate:async(e,{surrogate:t})=>h.cleanupSurrogate(t),twitchFetch:async(e,{baseUrl:t,endpoint:r,surrogate:a,fetchOptions:n={},body:o={},partialBody:s})=>(o=s||o,w.fetch({baseUrl:t,endpoint:r,surrogate:a,fetchOptions:n,body:o})),twitchPrepareSurrogate:async(e,{surrogate:t})=>w.prepareSurrogate(t),twitchCleanupSurrogate:async(e,{surrogate:t})=>w.cleanupSurrogate(t),getGlobalUserAccessToken:async()=>await l(),setGlobalUserAccessToken:async(t,r)=>{await async function(t){var r;const a=u(await c()),n=null!==(r=t&&u(t))&&void 0!==r?r:{};a.userId!==n.userId||n.isAnon?await o$2.auth.set("packageInstallAccessTokens",{}):await o$2.auth.set("savedAnonAccessToken",void 0),await o$2.auth.set("accessToken",t);}(r);},onGlobalUserAccessTokenChanged:(t,r)=>{let a;o$2.auth.subscribe((async()=>{const e=await l();e!==a&&(r(e),a=e);}));},getPackageInstallUserAccessToken:async(t,r)=>await async function(t){const r=await o$2.auth.get("packageInstallAccessTokens");let a=r[t];return a||(a=await d(t),r[t]=a,await o$2.auth.set("packageInstallAccessTokens",r)),a}(r),storageBucketSubscribe:async(t,r,a)=>{const n=o$2[r];if(!n)throw new Error(`Unknown bucket: ${r}`);n.subscribe(a);},storageBucketGet:async(t,r,a)=>{const n=o$2[r];if(!n)throw new Error(`Unknown bucket: ${r}`);return await n.get(a)},storageBucketSet:async(t,r,a,n)=>{const o=o$2[r];if(!o)throw new Error(`Unknown bucket: ${r}`);return o.set(a,n)}},namespace:"truffle-privileged-api-v1",strictMode:!0}).registerFrame(n(window));
